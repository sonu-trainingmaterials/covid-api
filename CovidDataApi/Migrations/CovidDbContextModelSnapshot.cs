// <auto-generated />
using System;
using CovidDataApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CovidDataApi.Migrations
{
    [DbContext(typeof(CovidDbContext))]
    partial class CovidDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CovidDataApi.Models.CaseTimeSeries", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dailyconfirmed")
                        .HasColumnType("int");

                    b.Property<int>("Dailydeceased")
                        .HasColumnType("int");

                    b.Property<int>("Dailyrecovered")
                        .HasColumnType("int");

                    b.Property<int>("Totalconfirmed")
                        .HasColumnType("int");

                    b.Property<int>("Totaldeceased")
                        .HasColumnType("int");

                    b.Property<int>("Totalrecovered")
                        .HasColumnType("int");

                    b.HasKey("Date");

                    b.ToTable("CaseTimeSeries");
                });

            modelBuilder.Entity("CovidDataApi.Models.CovidData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Confirmed")
                        .HasColumnType("bigint");

                    b.Property<string>("CountryOrRegion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("Deaths")
                        .HasColumnType("bigint");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<double>("Long")
                        .HasColumnType("float");

                    b.Property<string>("ProvinceOrState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Recovered")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("CovidData");
                });

            modelBuilder.Entity("CovidDataApi.Models.FeedbackData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("SubmitedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("CovidDataApi.Models.StateData", b =>
                {
                    b.Property<string>("State")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long>("Active")
                        .HasColumnType("bigint");

                    b.Property<long>("Confirmed")
                        .HasColumnType("bigint");

                    b.Property<long>("Deaths")
                        .HasColumnType("bigint");

                    b.Property<long>("DeltaConfirmed")
                        .HasColumnType("bigint");

                    b.Property<long>("DeltaDeaths")
                        .HasColumnType("bigint");

                    b.Property<long>("DeltaRecovered")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastUpdatedtime")
                        .HasColumnType("datetime2");

                    b.Property<long>("Recovered")
                        .HasColumnType("bigint");

                    b.Property<string>("Statecode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Statenotes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("State");

                    b.ToTable("StatesData");
                });

            modelBuilder.Entity("CovidDataApi.Models.TestData", b =>
                {
                    b.Property<string>("Updatetimestamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Individualstestedperconfirmedcase")
                        .HasColumnType("float");

                    b.Property<double?>("Positivecasesfromsamplesreported")
                        .HasColumnType("float");

                    b.Property<double?>("Samplereportedtoday")
                        .HasColumnType("float");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Testpositivityrate")
                        .HasColumnType("float");

                    b.Property<double?>("Testsconductedbyprivatelabs")
                        .HasColumnType("float");

                    b.Property<double?>("Testsperconfirmedcase")
                        .HasColumnType("float");

                    b.Property<double?>("Totalindividualstested")
                        .HasColumnType("float");

                    b.Property<double?>("Totalpositivecases")
                        .HasColumnType("float");

                    b.Property<double?>("Totalsamplestested")
                        .HasColumnType("float");

                    b.HasKey("Updatetimestamp");

                    b.ToTable("TestData");
                });
#pragma warning restore 612, 618
        }
    }
}
